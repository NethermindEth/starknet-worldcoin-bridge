{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromAddress",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        }
      ],
      "name": "ConsumedMessageToL1",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "ConsumedMessageToL2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromAddress",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        }
      ],
      "name": "LogMessageToL1",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "LogMessageToL2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "hashes",
          "type": "uint256[]"
        }
      ],
      "name": "MessageHashesAddedFromL2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "MessageToL2Canceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "MessageToL2CancellationStarted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "msgHashes",
          "type": "uint256[]"
        }
      ],
      "name": "addMessageHashesFromL2",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "cancelL1ToL2Message",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fromAddress",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        }
      ],
      "name": "consumeMessageFromL2",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxL1MsgFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "l1ToL2MessageCancellations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1ToL2MessageNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "l1ToL2Messages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "l2ToL1Messages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageCancellationDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        }
      ],
      "name": "sendMessageToL2",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toAddress",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "selector",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "payload",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "startL1ToL2MessageCancellation",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e67806100206000396000f3fe60806040526004361061009c5760003560e01c806377c7d7a91161006457806377c7d7a91461014c5780637a98660b1461016c5780638303bd8a1461018c5780639be446bf146101a1578063a46efaf3146101c1578063db3c5270146101e157600080fd5b8063018cccdf146100a15780632c9dd5c0146100c95780633e3aa6c5146100e957806354eccba4146101115780636170ff1b1461012c575b600080fd5b3480156100ad57600080fd5b506100b66101f6565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506100b66100e4366004610a72565b61023b565b6100fc6100f7366004610abe565b610359565b604080519283526020830191909152016100c0565b34801561011d57600080fd5b50670de0b6b3a76400006100b6565b34801561013857600080fd5b506100b6610147366004610b11565b6104ee565b34801561015857600080fd5b506100b6610167366004610b6c565b61070a565b34801561017857600080fd5b506100b6610187366004610b11565b610725565b34801561019857600080fd5b506100b6610803565b3480156101ad57600080fd5b506100b66101bc366004610b6c565b610826565b3480156101cd57600080fd5b506100b66101dc366004610b6c565b610830565b6101f46101ef366004610b85565b61083a565b005b60006102366040518060400160405280602081526020017f535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f4e4f4e43458152506108e6565b905090565b60405160009081906102599086903390869088908290602001610bf0565b604051602081830303815290604052805190602001209050600061027b61091a565b60008381526020919091526040902054116102dd5760405162461bcd60e51b815260206004820152601a60248201527f494e56414c49445f4d4553534147455f544f5f434f4e53554d4500000000000060448201526064015b60405180910390fd5b336001600160a01b0316857f7a06c571aa77f34d9706c51e5d8122b5595aebeaa34233bfe866f22befb973b18686604051610319929190610c4c565b60405180910390a3600161032b61091a565b6000838152602001908152602001600020600082825461034b9190610c7e565b909155509095945050505050565b600080600034116103b65760405162461bcd60e51b815260206004820152602160248201527f4c315f4d53475f4645455f4d5553545f42455f475245415445525f5448414e5f6044820152600360fc1b60648201526084016102d4565b670de0b6b3a764000034111561040e5760405162461bcd60e51b815260206004820152601760248201527f4d41585f4c315f4d53475f4645455f455843454544454400000000000000000060448201526064016102d4565b60006104186101f6565b90506104656040518060400160405280602081526020017f535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f4e4f4e43458152508260016104609190610c97565b61093d565b8587336001600160a01b03167fdb80dd488acf86d17c747445b0eabb5d57c541d3bd7b6b87af987858e5066b2b888886346040516104a69493929190610caa565b60405180910390a460006104bd8888888886610970565b90506104ca346001610c97565b6104d26109b1565b6000838152602091909152604090205597909650945050505050565b60008486336001600160a01b03167f8abd2ec2e0a10c82f5b60ea00455fa96c41fd144f225fcc52b8d83d94f803ed887878760405161052f93929190610cd1565b60405180910390a460006105468787878787610970565b905060006105526109b1565b6000838152602091909152604081205491508190036105aa5760405162461bcd60e51b81526020600482015260146024820152731393d7d35154d4d051d157d513d7d0d05390d15360621b60448201526064016102d4565b60006105b46109d4565b6000848152602091909152604081205491508190036106205760405162461bcd60e51b815260206004820152602260248201527f4d4553534147455f43414e43454c4c4154494f4e5f4e4f545f52455155455354604482015261115160f21b60648201526084016102d4565b600061062a610803565b6106349083610c97565b9050818110156106865760405162461bcd60e51b815260206004820152601c60248201527f43414e43454c5f414c4c4f5745445f54494d455f4f564552464c4f570000000060448201526064016102d4565b804210156106e25760405162461bcd60e51b8152602060048201526024808201527f4d4553534147455f43414e43454c4c4154494f4e5f4e4f545f414c4c4f57454460448201526317d6515560e21b60648201526084016102d4565b60006106ec6109b1565b60008681526020919091526040902055509198975050505050505050565b60006107146109b1565b600092835260205250604090205490565b60008486336001600160a01b03167f2e00dccd686fd6823ec7dc3e125582aa82881b6ff5f6b5a73856e1ea8338a3be87878760405161076693929190610cd1565b60405180910390a4600061077d8787878787610970565b905060006107896109b1565b600083815260209190915260409020549050806107df5760405162461bcd60e51b81526020600482015260146024820152731393d7d35154d4d051d157d513d7d0d05390d15360621b60448201526064016102d4565b426107e86109d4565b60008481526020919091526040902055509695505050505050565b60006102366040518060600160405280602d8152602001610dbc602d91396108e6565b60006107146109d4565b600061071461091a565b60005b818110156108a957600083838381811061085957610859610cf5565b9050602002013560001b9050600161086f61091a565b6000838152602001908152602001600020600082825461088f9190610c97565b909155508291506108a1905081610d0b565b91505061083d565b507e31e49c5c8cbb8204c84525dfc1a145e06e35f873b703ce44df65b9516fb17a82826040516108da929190610c4c565b60405180910390a15050565b600080826040516020016108fa9190610d24565b60408051601f198184030181529190528051602090910120549392505050565b6000610236604051806060016040528060238152602001610de9602391396109f3565b6000826040516020016109509190610d24565b604051602081830303815290604052805190602001209050818155505050565b60405160009061099090339088908590899088908a908290602001610d53565b60405160208183030381529060405280519060200120905095945050505050565b6000610236604051806060016040528060268152602001610e0c602691396109f3565b6000610236604051806060016040528060308152602001610d8c603091395b60008082604051602001610a079190610d24565b60408051601f1981840301815291905280516020909101209392505050565b60008083601f840112610a3857600080fd5b50813567ffffffffffffffff811115610a5057600080fd5b6020830191508360208260051b8501011115610a6b57600080fd5b9250929050565b600080600060408486031215610a8757600080fd5b83359250602084013567ffffffffffffffff811115610aa557600080fd5b610ab186828701610a26565b9497909650939450505050565b60008060008060608587031215610ad457600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610af957600080fd5b610b0587828801610a26565b95989497509550505050565b600080600080600060808688031215610b2957600080fd5b8535945060208601359350604086013567ffffffffffffffff811115610b4e57600080fd5b610b5a88828901610a26565b96999598509660600135949350505050565b600060208284031215610b7e57600080fd5b5035919050565b60008060208385031215610b9857600080fd5b823567ffffffffffffffff811115610baf57600080fd5b610bbb85828601610a26565b90969095509350505050565b60006001600160fb1b03831115610bdd57600080fd5b8260051b80838637939093019392505050565b8581528460208201528360408201526000610c0f606083018486610bc7565b979650505050505050565b81835260006001600160fb1b03831115610c3357600080fd5b8260051b80836020870137939093016020019392505050565b602081526000610c60602083018486610c1a565b949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c9157610c91610c68565b92915050565b80820180821115610c9157610c91610c68565b606081526000610cbe606083018688610c1a565b6020830194909452506040015292915050565b604081526000610ce5604083018587610c1a565b9050826020830152949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610d1d57610d1d610c68565b5060010190565b6000825160005b81811015610d455760208186018101518583015201610d2b565b506000920191825250919050565b8781528660208201528560408201528460608201528360808201526000610d7e60a083018486610bc7565b999850505050505050505056fe535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f43414e43454c4c4154494f4e5f4d41505050494e47535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f43414e43454c4c4154494f4e5f44454c4159535441524b4e45545f312e305f4d5347494e475f4c32544f4c315f4d41505050494e47535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f4d41505050494e475f5632a264697066735822122042bf95e39d1947e211fa8cc7a27179f332d1866239677046ccc604d2baa6552c64736f6c63430008150033",
    "sourceMap": "824:661:28:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061009c5760003560e01c806377c7d7a91161006457806377c7d7a91461014c5780637a98660b1461016c5780638303bd8a1461018c5780639be446bf146101a1578063a46efaf3146101c1578063db3c5270146101e157600080fd5b8063018cccdf146100a15780632c9dd5c0146100c95780633e3aa6c5146100e957806354eccba4146101115780636170ff1b1461012c575b600080fd5b3480156100ad57600080fd5b506100b66101f6565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506100b66100e4366004610a72565b61023b565b6100fc6100f7366004610abe565b610359565b604080519283526020830191909152016100c0565b34801561011d57600080fd5b50670de0b6b3a76400006100b6565b34801561013857600080fd5b506100b6610147366004610b11565b6104ee565b34801561015857600080fd5b506100b6610167366004610b6c565b61070a565b34801561017857600080fd5b506100b6610187366004610b11565b610725565b34801561019857600080fd5b506100b6610803565b3480156101ad57600080fd5b506100b66101bc366004610b6c565b610826565b3480156101cd57600080fd5b506100b66101dc366004610b6c565b610830565b6101f46101ef366004610b85565b61083a565b005b60006102366040518060400160405280602081526020017f535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f4e4f4e43458152506108e6565b905090565b60405160009081906102599086903390869088908290602001610bf0565b604051602081830303815290604052805190602001209050600061027b61091a565b60008381526020919091526040902054116102dd5760405162461bcd60e51b815260206004820152601a60248201527f494e56414c49445f4d4553534147455f544f5f434f4e53554d4500000000000060448201526064015b60405180910390fd5b336001600160a01b0316857f7a06c571aa77f34d9706c51e5d8122b5595aebeaa34233bfe866f22befb973b18686604051610319929190610c4c565b60405180910390a3600161032b61091a565b6000838152602001908152602001600020600082825461034b9190610c7e565b909155509095945050505050565b600080600034116103b65760405162461bcd60e51b815260206004820152602160248201527f4c315f4d53475f4645455f4d5553545f42455f475245415445525f5448414e5f6044820152600360fc1b60648201526084016102d4565b670de0b6b3a764000034111561040e5760405162461bcd60e51b815260206004820152601760248201527f4d41585f4c315f4d53475f4645455f455843454544454400000000000000000060448201526064016102d4565b60006104186101f6565b90506104656040518060400160405280602081526020017f535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f4e4f4e43458152508260016104609190610c97565b61093d565b8587336001600160a01b03167fdb80dd488acf86d17c747445b0eabb5d57c541d3bd7b6b87af987858e5066b2b888886346040516104a69493929190610caa565b60405180910390a460006104bd8888888886610970565b90506104ca346001610c97565b6104d26109b1565b6000838152602091909152604090205597909650945050505050565b60008486336001600160a01b03167f8abd2ec2e0a10c82f5b60ea00455fa96c41fd144f225fcc52b8d83d94f803ed887878760405161052f93929190610cd1565b60405180910390a460006105468787878787610970565b905060006105526109b1565b6000838152602091909152604081205491508190036105aa5760405162461bcd60e51b81526020600482015260146024820152731393d7d35154d4d051d157d513d7d0d05390d15360621b60448201526064016102d4565b60006105b46109d4565b6000848152602091909152604081205491508190036106205760405162461bcd60e51b815260206004820152602260248201527f4d4553534147455f43414e43454c4c4154494f4e5f4e4f545f52455155455354604482015261115160f21b60648201526084016102d4565b600061062a610803565b6106349083610c97565b9050818110156106865760405162461bcd60e51b815260206004820152601c60248201527f43414e43454c5f414c4c4f5745445f54494d455f4f564552464c4f570000000060448201526064016102d4565b804210156106e25760405162461bcd60e51b8152602060048201526024808201527f4d4553534147455f43414e43454c4c4154494f4e5f4e4f545f414c4c4f57454460448201526317d6515560e21b60648201526084016102d4565b60006106ec6109b1565b60008681526020919091526040902055509198975050505050505050565b60006107146109b1565b600092835260205250604090205490565b60008486336001600160a01b03167f2e00dccd686fd6823ec7dc3e125582aa82881b6ff5f6b5a73856e1ea8338a3be87878760405161076693929190610cd1565b60405180910390a4600061077d8787878787610970565b905060006107896109b1565b600083815260209190915260409020549050806107df5760405162461bcd60e51b81526020600482015260146024820152731393d7d35154d4d051d157d513d7d0d05390d15360621b60448201526064016102d4565b426107e86109d4565b60008481526020919091526040902055509695505050505050565b60006102366040518060600160405280602d8152602001610dbc602d91396108e6565b60006107146109d4565b600061071461091a565b60005b818110156108a957600083838381811061085957610859610cf5565b9050602002013560001b9050600161086f61091a565b6000838152602001908152602001600020600082825461088f9190610c97565b909155508291506108a1905081610d0b565b91505061083d565b507e31e49c5c8cbb8204c84525dfc1a145e06e35f873b703ce44df65b9516fb17a82826040516108da929190610c4c565b60405180910390a15050565b600080826040516020016108fa9190610d24565b60408051601f198184030181529190528051602090910120549392505050565b6000610236604051806060016040528060238152602001610de9602391396109f3565b6000826040516020016109509190610d24565b604051602081830303815290604052805190602001209050818155505050565b60405160009061099090339088908590899088908a908290602001610d53565b60405160208183030381529060405280519060200120905095945050505050565b6000610236604051806060016040528060268152602001610e0c602691396109f3565b6000610236604051806060016040528060308152602001610d8c603091395b60008082604051602001610a079190610d24565b60408051601f1981840301815291905280516020909101209392505050565b60008083601f840112610a3857600080fd5b50813567ffffffffffffffff811115610a5057600080fd5b6020830191508360208260051b8501011115610a6b57600080fd5b9250929050565b600080600060408486031215610a8757600080fd5b83359250602084013567ffffffffffffffff811115610aa557600080fd5b610ab186828701610a26565b9497909650939450505050565b60008060008060608587031215610ad457600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610af957600080fd5b610b0587828801610a26565b95989497509550505050565b600080600080600060808688031215610b2957600080fd5b8535945060208601359350604086013567ffffffffffffffff811115610b4e57600080fd5b610b5a88828901610a26565b96999598509660600135949350505050565b600060208284031215610b7e57600080fd5b5035919050565b60008060208385031215610b9857600080fd5b823567ffffffffffffffff811115610baf57600080fd5b610bbb85828601610a26565b90969095509350505050565b60006001600160fb1b03831115610bdd57600080fd5b8260051b80838637939093019392505050565b8581528460208201528360408201526000610c0f606083018486610bc7565b979650505050505050565b81835260006001600160fb1b03831115610c3357600080fd5b8260051b80836020870137939093016020019392505050565b602081526000610c60602083018486610c1a565b949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c9157610c91610c68565b92915050565b80820180821115610c9157610c91610c68565b606081526000610cbe606083018688610c1a565b6020830194909452506040015292915050565b604081526000610ce5604083018587610c1a565b9050826020830152949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610d1d57610d1d610c68565b5060010190565b6000825160005b81811015610d455760208186018101518583015201610d2b565b506000920191825250919050565b8781528660208201528560408201528460608201528360808201526000610d7e60a083018486610bc7565b999850505050505050505056fe535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f43414e43454c4c4154494f4e5f4d41505050494e47535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f43414e43454c4c4154494f4e5f44454c4159535441524b4e45545f312e305f4d5347494e475f4c32544f4c315f4d41505050494e47535441524b4e45545f312e305f4d5347494e475f4c31544f4c325f4d41505050494e475f5632a264697066735822122042bf95e39d1947e211fa8cc7a27179f332d1866239677046ccc604d2baa6552c64736f6c63430008150033",
    "sourceMap": "824:661:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:133:22;;;;;;;;;;;;;:::i;:::-;;;160:25:29;;;148:2;133:18;2496:133:22;;;;;;;;5199:564;;;;;;;;;;-1:-1:-1;5199:564:22;;;;;:::i;:::-;;:::i;4234:844::-;;;;;;:::i;:::-;;:::i;:::-;;;;2012:25:29;;;2068:2;2053:18;;2046:34;;;;1985:18;4234:844:22;1838:248:29;1642:103:22;;;;;;;;;;-1:-1:-1;1628:7:22;1642:103;;6359:1148;;;;;;;;;;-1:-1:-1;6359:1148:22;;;;;:::i;:::-;;:::i;1892:122::-;;;;;;;;;;-1:-1:-1;1892:122:22;;;;;:::i;:::-;;:::i;5769:584::-;;;;;;;;;;-1:-1:-1;5769:584:22;;;;;:::i;:::-;;:::i;2635:152::-;;;;;;;;;;;;;:::i;3159:146::-;;;;;;;;;;-1:-1:-1;3159:146:22;;;;;:::i;:::-;;:::i;2020:122::-;;;;;;;;;;-1:-1:-1;2020:122:22;;;;;:::i;:::-;;:::i;1153:329:28:-;;;;;;:::i;:::-;;:::i;:::-;;2496:133:22;2547:7;2573:49;2599:22;;;;;;;;;;;;;;;;;2573:25;:49::i;:::-;2566:56;;2496:133;:::o;5199:564::-;5451:84;;5329:7;;;;5451:84;;5468:11;;5497:10;;5511:7;;;;;;5451:84;;;:::i;:::-;;;;;;;;;;;;;5370:175;;;;;;5352:193;;5592:1;5564:16;:14;:16::i;:::-;:25;;;;;;;;;;;;;:29;5556:68;;;;-1:-1:-1;;;5556:68:22;;4293:2:29;5556:68:22;;;4275:21:29;4332:2;4312:18;;;4305:30;4371:28;4351:18;;;4344:56;4417:18;;5556:68:22;;;;;;;;;5672:10;-1:-1:-1;;;;;5639:53:22;5659:11;5639:53;5684:7;;5639:53;;;;;;;:::i;:::-;;;;;;;;5731:1;5702:16;:14;:16::i;:::-;:25;5719:7;5702:25;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;5749:7:22;;5199:564;-1:-1:-1;;;;;5199:564:22:o;4234:844::-;4389:7;4398;4437:1;4425:9;:13;4417:59;;;;-1:-1:-1;;;4417:59:22;;5530:2:29;4417:59:22;;;5512:21:29;5569:2;5549:18;;;5542:30;5608:34;5588:18;;;5581:62;-1:-1:-1;;;5659:18:29;;;5652:31;5700:19;;4417:59:22;5328:397:29;4417:59:22;1628:7;4494:9;:29;;4486:65;;;;-1:-1:-1;;;4486:65:22;;5932:2:29;4486:65:22;;;5914:21:29;5971:2;5951:18;;;5944:30;6010:25;5990:18;;;5983:53;6053:18;;4486:65:22;5730:347:29;4486:65:22;4561:13;4577:20;:18;:20::i;:::-;4561:36;;4607:60;4633:22;;;;;;;;;;;;;;;;;4657:5;4665:1;4657:9;;;;:::i;:::-;4607:25;:60::i;:::-;4720:8;4709:9;4697:10;-1:-1:-1;;;;;4682:74:22;;4730:7;;4739:5;4746:9;4682:74;;;;;;;;;:::i;:::-;;;;;;;;4766:15;4784:53;4801:9;4812:8;4822:7;;4831:5;4784:16;:53::i;:::-;4766:71;-1:-1:-1;5025:13:22;:9;5037:1;5025:13;:::i;:::-;4997:16;:14;:16::i;:::-;:25;;;;;;;;;;;;:41;:25;5065:5;;-1:-1:-1;4234:844:22;-1:-1:-1;;;;;4234:844:22:o;6359:1148::-;6533:7;6600:8;6589:9;6577:10;-1:-1:-1;;;;;6557:68:22;;6610:7;;6619:5;6557:68;;;;;;;;:::i;:::-;;;;;;;;6843:15;6861:53;6878:9;6889:8;6899:7;;6908:5;6861:16;:53::i;:::-;6843:71;;6924:21;6948:16;:14;:16::i;:::-;:25;;;;;;;;;;;;;;-1:-1:-1;6991:18:22;;;6983:51;;;;-1:-1:-1;;;6983:51:22;;7221:2:29;6983:51:22;;;7203:21:29;7260:2;7240:18;;;7233:30;-1:-1:-1;;;7279:18:29;;;7272:50;7339:18;;6983:51:22;7019:344:29;6983:51:22;7045:19;7067:28;:26;:28::i;:::-;:37;;;;;;;;;;;;;;-1:-1:-1;7122:16:22;;;7114:63;;;;-1:-1:-1;;;7114:63:22;;7570:2:29;7114:63:22;;;7552:21:29;7609:2;7589:18;;;7582:30;7648:34;7628:18;;;7621:62;-1:-1:-1;;;7699:18:29;;;7692:32;7741:19;;7114:63:22;7368:398:29;7114:63:22;7188:25;7230:26;:24;:26::i;:::-;7216:40;;:11;:40;:::i;:::-;7188:68;;7295:11;7274:17;:32;;7266:73;;;;-1:-1:-1;;;7266:73:22;;7973:2:29;7266:73:22;;;7955:21:29;8012:2;7992:18;;;7985:30;8051;8031:18;;;8024:58;8099:18;;7266:73:22;7771:352:29;7266:73:22;7376:17;7357:15;:36;;7349:85;;;;-1:-1:-1;;;7349:85:22;;8330:2:29;7349:85:22;;;8312:21:29;8369:2;8349:18;;;8342:30;8408:34;8388:18;;;8381:62;-1:-1:-1;;;8459:18:29;;;8452:34;8503:19;;7349:85:22;8128:400:29;7349:85:22;7473:1;7445:16;:14;:16::i;:::-;:25;;;;;;;;;;;;:29;-1:-1:-1;7445:25:22;;6359:1148;-1:-1:-1;;;;;;;;6359:1148:22:o;1892:122::-;1956:7;1982:16;:14;:16::i;:::-;:25;;;;;;-1:-1:-1;1982:25:22;;;;;1892:122::o;5769:584::-;5954:7;6032:8;6021:9;6009:10;-1:-1:-1;;;;;5978:79:22;;6042:7;;6051:5;5978:79;;;;;;;;:::i;:::-;;;;;;;;6067:15;6085:53;6102:9;6113:8;6123:7;;6132:5;6085:16;:53::i;:::-;6067:71;;6148:21;6172:16;:14;:16::i;:::-;:25;;;;;;;;;;;;;;-1:-1:-1;6215:17:22;6207:50;;;;-1:-1:-1;;;6207:50:22;;7221:2:29;6207:50:22;;;7203:21:29;7260:2;7240:18;;;7233:30;-1:-1:-1;;;7279:18:29;;;7272:50;7339:18;;6207:50:22;7019:344:29;6207:50:22;6307:15;6267:28;:26;:28::i;:::-;:37;;;;;;;;;;;;:55;-1:-1:-1;6267:37:22;5769:584;-1:-1:-1;;;;;;5769:584:22:o;2635:152::-;2692:7;2718:62;2744:35;;;;;;;;;;;;;;;;;2718:25;:62::i;3159:146::-;3235:7;3261:28;:26;:28::i;2020:122::-;2084:7;2110:16;:14;:16::i;1153:329:28:-;1281:9;1276:149;1296:20;;;1276:149;;;1337:12;1360:9;;1370:1;1360:12;;;;;;;:::i;:::-;;;;;;;1352:21;;1337:36;;1413:1;1387:16;:14;:16::i;:::-;:22;1404:4;1387:22;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;1318:3:28;;-1:-1:-1;1318:3:28;;-1:-1:-1;1318:3:28;;:::i;:::-;;;;1276:149;;;;1440:35;1465:9;;1440:35;;;;;;;:::i;:::-;;;;;;;;1153:329;;:::o;2060:209:21:-;2125:14;2151:12;2193:4;2176:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2176:22:21;;;;;;;;;2166:33;;2176:22;2166:33;;;;2242:11;;2060:209;-1:-1:-1;;;2060:209:21:o;2322:168:22:-;2371:35;2425:58;2462:20;;;;;;;;;;;;;;;;;2425:36;:58::i;2275:192:21:-;2351:12;2393:4;2376:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2366:33;;;;;;2351:48;;2445:5;2439:4;2432:19;2418:43;2275:192;;:::o;3616:556:22:-;3848:303;;3783:7;;3848:303;;3968:10;;4002:9;;4033:5;;4060:8;;4090:7;;;;;;3848:303;;;:::i;:::-;;;;;;;;;;;;;3821:344;;;;;;3802:363;;3616:556;;;;;;;:::o;2148:168::-;2197:35;2251:58;2288:20;;;;;;;;;;;;;;;;;2251:36;:58::i;3311:221::-;3396:35;3454:71;3491:33;;;;;;;;;;;;;;;;;853:298:21;953:50;1019:16;1065:4;1048:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1048:22:21;;;;;;;;;1038:33;;1048:22;1038:33;;;;;853:298;-1:-1:-1;;;853:298:21:o;196:367:29:-;259:8;269:6;323:3;316:4;308:6;304:17;300:27;290:55;;341:1;338;331:12;290:55;-1:-1:-1;364:20:29;;407:18;396:30;;393:50;;;439:1;436;429:12;393:50;476:4;468:6;464:17;452:29;;536:3;529:4;519:6;516:1;512:14;504:6;500:27;496:38;493:47;490:67;;;553:1;550;543:12;490:67;196:367;;;;;:::o;568:505::-;663:6;671;679;732:2;720:9;711:7;707:23;703:32;700:52;;;748:1;745;738:12;700:52;784:9;771:23;761:33;;845:2;834:9;830:18;817:32;872:18;864:6;861:30;858:50;;;904:1;901;894:12;858:50;943:70;1005:7;996:6;985:9;981:22;943:70;:::i;:::-;568:505;;1032:8;;-1:-1:-1;917:96:29;;-1:-1:-1;;;;568:505:29:o;1260:573::-;1364:6;1372;1380;1388;1441:2;1429:9;1420:7;1416:23;1412:32;1409:52;;;1457:1;1454;1447:12;1409:52;1493:9;1480:23;1470:33;;1550:2;1539:9;1535:18;1522:32;1512:42;;1605:2;1594:9;1590:18;1577:32;1632:18;1624:6;1621:30;1618:50;;;1664:1;1661;1654:12;1618:50;1703:70;1765:7;1756:6;1745:9;1741:22;1703:70;:::i;:::-;1260:573;;;;-1:-1:-1;1792:8:29;-1:-1:-1;;;;1260:573:29:o;2091:642::-;2204:6;2212;2220;2228;2236;2289:3;2277:9;2268:7;2264:23;2260:33;2257:53;;;2306:1;2303;2296:12;2257:53;2342:9;2329:23;2319:33;;2399:2;2388:9;2384:18;2371:32;2361:42;;2454:2;2443:9;2439:18;2426:32;2481:18;2473:6;2470:30;2467:50;;;2513:1;2510;2503:12;2467:50;2552:70;2614:7;2605:6;2594:9;2590:22;2552:70;:::i;:::-;2091:642;;;;-1:-1:-1;2641:8:29;2723:2;2708:18;2695:32;;2091:642;-1:-1:-1;;;;2091:642:29:o;2738:180::-;2797:6;2850:2;2838:9;2829:7;2825:23;2821:32;2818:52;;;2866:1;2863;2856:12;2818:52;-1:-1:-1;2889:23:29;;2738:180;-1:-1:-1;2738:180:29:o;2923:437::-;3009:6;3017;3070:2;3058:9;3049:7;3045:23;3041:32;3038:52;;;3086:1;3083;3076:12;3038:52;3126:9;3113:23;3159:18;3151:6;3148:30;3145:50;;;3191:1;3188;3181:12;3145:50;3230:70;3292:7;3283:6;3272:9;3268:22;3230:70;:::i;:::-;3319:8;;3204:96;;-1:-1:-1;2923:437:29;-1:-1:-1;;;;2923:437:29:o;3365:261::-;3435:3;-1:-1:-1;;;;;3456:31:29;;3453:51;;;3500:1;3497;3490:12;3453:51;3536:6;3533:1;3529:14;3577:8;3570:5;3565:3;3552:34;3602:18;;;;;3365:261;-1:-1:-1;;;3365:261:29:o;3631:455::-;3916:6;3911:3;3904:19;3953:6;3948:2;3943:3;3939:12;3932:28;3990:6;3985:2;3980:3;3976:12;3969:28;3886:3;4013:67;4076:2;4071:3;4067:12;4059:6;4051;4013:67;:::i;:::-;4006:74;3631:455;-1:-1:-1;;;;;;;3631:455:29:o;4446:315::-;4538:19;;;4520:3;-1:-1:-1;;;;;4569:31:29;;4566:51;;;4613:1;4610;4603:12;4566:51;4649:6;4646:1;4642:14;4701:8;4694:5;4687:4;4682:3;4678:14;4665:45;4730:18;;;;4750:4;4726:29;;4446:315;-1:-1:-1;;;4446:315:29:o;4766:292::-;4955:2;4944:9;4937:21;4918:4;4975:77;5048:2;5037:9;5033:18;5025:6;5017;4975:77;:::i;:::-;4967:85;4766:292;-1:-1:-1;;;;4766:292:29:o;5063:127::-;5124:10;5119:3;5115:20;5112:1;5105:31;5155:4;5152:1;5145:15;5179:4;5176:1;5169:15;5195:128;5262:9;;;5283:11;;;5280:37;;;5297:18;;:::i;:::-;5195:128;;;;:::o;6082:125::-;6147:9;;;6168:10;;;6165:36;;;6181:18;;:::i;6212:434::-;6457:2;6446:9;6439:21;6420:4;6477:77;6550:2;6539:9;6535:18;6527:6;6519;6477:77;:::i;:::-;6585:2;6570:18;;6563:34;;;;-1:-1:-1;6628:2:29;6613:18;6606:34;6469:85;6212:434;-1:-1:-1;;6212:434:29:o;6651:363::-;6868:2;6857:9;6850:21;6831:4;6888:77;6961:2;6950:9;6946:18;6938:6;6930;6888:77;:::i;:::-;6880:85;;7001:6;6996:2;6985:9;6981:18;6974:34;6651:363;;;;;;:::o;8533:127::-;8594:10;8589:3;8585:20;8582:1;8575:31;8625:4;8622:1;8615:15;8649:4;8646:1;8639:15;8665:135;8704:3;8725:17;;;8722:43;;8745:18;;:::i;:::-;-1:-1:-1;8792:1:29;8781:13;;8665:135::o;8805:414::-;8936:3;8974:6;8968:13;8999:1;9009:129;9023:6;9020:1;9017:13;9009:129;;;9121:4;9105:14;;;9101:25;;9095:32;9082:11;;;9075:53;9038:12;9009:129;;;-1:-1:-1;9193:1:29;9157:16;;9182:13;;;-1:-1:-1;9157:16:29;8805:414;-1:-1:-1;8805:414:29:o;9224:587::-;9565:6;9560:3;9553:19;9602:6;9597:2;9592:3;9588:12;9581:28;9639:6;9634:2;9629:3;9625:12;9618:28;9676:6;9671:2;9666:3;9662:12;9655:28;9714:6;9708:3;9703;9699:13;9692:29;9535:3;9737:68;9800:3;9795;9791:13;9783:6;9775;9737:68;:::i;:::-;9730:75;9224:587;-1:-1:-1;;;;;;;;;9224:587:29:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addMessageHashesFromL2(uint256[])": "db3c5270",
    "cancelL1ToL2Message(uint256,uint256,uint256[],uint256)": "6170ff1b",
    "consumeMessageFromL2(uint256,uint256[])": "2c9dd5c0",
    "getMaxL1MsgFee()": "54eccba4",
    "l1ToL2MessageCancellations(bytes32)": "9be446bf",
    "l1ToL2MessageNonce()": "018cccdf",
    "l1ToL2Messages(bytes32)": "77c7d7a9",
    "l2ToL1Messages(bytes32)": "a46efaf3",
    "messageCancellationDelay()": "8303bd8a",
    "sendMessageToL2(uint256,uint256,uint256[])": "3e3aa6c5",
    "startL1ToL2MessageCancellation(uint256,uint256,uint256[],uint256)": "7a98660b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"}],\"name\":\"ConsumedMessageToL1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"ConsumedMessageToL2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"}],\"name\":\"LogMessageToL1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"LogMessageToL2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"hashes\",\"type\":\"uint256[]\"}],\"name\":\"MessageHashesAddedFromL2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"MessageToL2Canceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"MessageToL2CancellationStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"msgHashes\",\"type\":\"uint256[]\"}],\"name\":\"addMessageHashesFromL2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"cancelL1ToL2Message\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"}],\"name\":\"consumeMessageFromL2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxL1MsgFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"l1ToL2MessageCancellations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1ToL2MessageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"l1ToL2Messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"l2ToL1Messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageCancellationDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"}],\"name\":\"sendMessageToL2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selector\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"startL1ToL2MessageCancellation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The idea is that, to not wait on the block to be proven, this messaging contract can receive directly a hash of a message to be considered as `received`. This message can then be consumed normally. DISCLAIMER: The purpose of this contract is for local development only.\",\"kind\":\"dev\",\"methods\":{\"addMessageHashesFromL2(uint256[])\":{\"params\":{\"msgHashes\":\"Hashes to register as consumable.\"}}},\"title\":\"A superset of StarknetMessaging to support local development by adding a way to directly register a message hash ready to be consumed, without waiting the block to be verified.\",\"version\":1},\"userdoc\":{\"events\":{\"MessageHashesAddedFromL2(uint256[])\":{\"notice\":\"Hashes were added.\"}},\"kind\":\"user\",\"methods\":{\"addMessageHashesFromL2(uint256[])\":{\"notice\":\"Adds the hashes of messages from L2.\"},\"cancelL1ToL2Message(uint256,uint256,uint256[],uint256)\":{\"notice\":\"Cancels an L1 to L2 message, this function should be called at least messageCancellationDelay() seconds after the call to startL1ToL2MessageCancellation(). A message may only be cancelled by its sender. If the message is missing, the call will revert. Note that the message fee is not refunded.\"},\"consumeMessageFromL2(uint256,uint256[])\":{\"notice\":\"Consumes a message that was sent from an L2 contract. Returns the hash of the message.\"},\"getMaxL1MsgFee()\":{\"notice\":\"Returns the max fee (in Wei) that StarkNet will accept per single message.\"},\"l1ToL2MessageCancellations(bytes32)\":{\"notice\":\"Returns the timestamp at the time cancelL1ToL2Message was called with a message matching 'msgHash'. The function returns 0 if cancelL1ToL2Message was never called.\"},\"l1ToL2Messages(bytes32)\":{\"notice\":\"Returns the msg_fee + 1 for the message with the given 'msgHash', or 0 if no message with such a hash is pending.\"},\"sendMessageToL2(uint256,uint256,uint256[])\":{\"notice\":\"Sends a message to an L2 contract.\"},\"startL1ToL2MessageCancellation(uint256,uint256,uint256[],uint256)\":{\"notice\":\"Starts the cancellation of an L1 to L2 message. A message can be canceled messageCancellationDelay() seconds after this function is called. Note: This function may only be called for a message that is currently pending and the caller must be the sender of the that message.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StarknetMessagingLocal.sol\":\"StarknetMessagingLocal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\",\":starknet/=lib/starknet/\"]},\"sources\":{\"lib/starknet/IStarknetMessaging.sol\":{\"keccak256\":\"0x40014108e2795fd544af0f6322882e99cc3f0872990d504c1ccebce2afea9617\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://d3eec1c3f47243734573b4ac3fc42db2eee4d110d8c39be16fbc6f93498e318d\",\"dweb:/ipfs/QmdYdJFPdEPUFQATa24jNvL59GtdoJeym1w7EARyCq8CvY\"]},\"lib/starknet/IStarknetMessagingEvents.sol\":{\"keccak256\":\"0xdd7dc4b5d276ae1254209be2f35f0d55ea0e33e51171b95f4b17e008d6f9ebf4\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://00b5167b5231501621703be5c62794c508b56ee82cd2fbb83f623c69389b39b8\",\"dweb:/ipfs/QmeS6otHZtMgg82WbtX4UTLYbBcqfwjeJW4oQNdVVVCSsY\"]},\"lib/starknet/NamedStorage.sol\":{\"keccak256\":\"0x271b361a4852768a5e8761cff79536a87be3c4d23fcca9945d20cbe9bfa3e55b\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://e51d7714f73d99628785c7d5810ca0a30dd71e69565e09a6e328c169756104fe\",\"dweb:/ipfs/Qmd3MQN9eUnm9xvspy3GoSwN3rVnipi9PrG7wPghBUQMcw\"]},\"lib/starknet/StarknetMessaging.sol\":{\"keccak256\":\"0xaccd91a996a93175406ea85da1a2e1035042805a3513a258856a41d33bbc914b\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://621aeae6466879c7104fb1993ca9795b1513fbe5635a16ce1364355ff14e5c5c\",\"dweb:/ipfs/Qmb7c2TR6yKtsutX9xWovcN5GqfrtusLyeTKWUqPpSjz3H\"]},\"src/StarknetMessagingLocal.sol\":{\"keccak256\":\"0x976f76f537938714bd52e90c4972035c37a72e0d5724f17b6426fa0da7c70cfb\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://4cd87bac92bd19bc497972763506e8ee2171e8591e4935b9c64d804369e41a42\",\"dweb:/ipfs/Qmd8qkBHayruW44tHBb2TAWwZgmSVftjYftAzGSX2SyktB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromAddress",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConsumedMessageToL1",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConsumedMessageToL2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromAddress",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogMessageToL1",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogMessageToL2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "hashes",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageHashesAddedFromL2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageToL2Canceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageToL2CancellationStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "msgHashes",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addMessageHashesFromL2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelL1ToL2Message",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consumeMessageFromL2",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getMaxL1MsgFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "l1ToL2MessageCancellations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1ToL2MessageNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "l1ToL2Messages",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "l2ToL1Messages",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messageCancellationDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sendMessageToL2",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "toAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "selector",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "payload",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startL1ToL2MessageCancellation",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addMessageHashesFromL2(uint256[])": {
            "params": {
              "msgHashes": "Hashes to register as consumable."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addMessageHashesFromL2(uint256[])": {
            "notice": "Adds the hashes of messages from L2."
          },
          "cancelL1ToL2Message(uint256,uint256,uint256[],uint256)": {
            "notice": "Cancels an L1 to L2 message, this function should be called at least messageCancellationDelay() seconds after the call to startL1ToL2MessageCancellation(). A message may only be cancelled by its sender. If the message is missing, the call will revert. Note that the message fee is not refunded."
          },
          "consumeMessageFromL2(uint256,uint256[])": {
            "notice": "Consumes a message that was sent from an L2 contract. Returns the hash of the message."
          },
          "getMaxL1MsgFee()": {
            "notice": "Returns the max fee (in Wei) that StarkNet will accept per single message."
          },
          "l1ToL2MessageCancellations(bytes32)": {
            "notice": "Returns the timestamp at the time cancelL1ToL2Message was called with a message matching 'msgHash'. The function returns 0 if cancelL1ToL2Message was never called."
          },
          "l1ToL2Messages(bytes32)": {
            "notice": "Returns the msg_fee + 1 for the message with the given 'msgHash', or 0 if no message with such a hash is pending."
          },
          "sendMessageToL2(uint256,uint256,uint256[])": {
            "notice": "Sends a message to an L2 contract."
          },
          "startL1ToL2MessageCancellation(uint256,uint256,uint256[],uint256)": {
            "notice": "Starts the cancellation of an L1 to L2 message. A message can be canceled messageCancellationDelay() seconds after this function is called. Note: This function may only be called for a message that is currently pending and the caller must be the sender of the that message."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/",
        "starknet/=lib/starknet/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/StarknetMessagingLocal.sol": "StarknetMessagingLocal"
      },
      "libraries": {}
    },
    "sources": {
      "lib/starknet/IStarknetMessaging.sol": {
        "keccak256": "0x40014108e2795fd544af0f6322882e99cc3f0872990d504c1ccebce2afea9617",
        "urls": [
          "bzz-raw://d3eec1c3f47243734573b4ac3fc42db2eee4d110d8c39be16fbc6f93498e318d",
          "dweb:/ipfs/QmdYdJFPdEPUFQATa24jNvL59GtdoJeym1w7EARyCq8CvY"
        ],
        "license": "Apache-2.0."
      },
      "lib/starknet/IStarknetMessagingEvents.sol": {
        "keccak256": "0xdd7dc4b5d276ae1254209be2f35f0d55ea0e33e51171b95f4b17e008d6f9ebf4",
        "urls": [
          "bzz-raw://00b5167b5231501621703be5c62794c508b56ee82cd2fbb83f623c69389b39b8",
          "dweb:/ipfs/QmeS6otHZtMgg82WbtX4UTLYbBcqfwjeJW4oQNdVVVCSsY"
        ],
        "license": "Apache-2.0."
      },
      "lib/starknet/NamedStorage.sol": {
        "keccak256": "0x271b361a4852768a5e8761cff79536a87be3c4d23fcca9945d20cbe9bfa3e55b",
        "urls": [
          "bzz-raw://e51d7714f73d99628785c7d5810ca0a30dd71e69565e09a6e328c169756104fe",
          "dweb:/ipfs/Qmd3MQN9eUnm9xvspy3GoSwN3rVnipi9PrG7wPghBUQMcw"
        ],
        "license": "Apache-2.0."
      },
      "lib/starknet/StarknetMessaging.sol": {
        "keccak256": "0xaccd91a996a93175406ea85da1a2e1035042805a3513a258856a41d33bbc914b",
        "urls": [
          "bzz-raw://621aeae6466879c7104fb1993ca9795b1513fbe5635a16ce1364355ff14e5c5c",
          "dweb:/ipfs/Qmb7c2TR6yKtsutX9xWovcN5GqfrtusLyeTKWUqPpSjz3H"
        ],
        "license": "Apache-2.0."
      },
      "src/StarknetMessagingLocal.sol": {
        "keccak256": "0x976f76f537938714bd52e90c4972035c37a72e0d5724f17b6426fa0da7c70cfb",
        "urls": [
          "bzz-raw://4cd87bac92bd19bc497972763506e8ee2171e8591e4935b9c64d804369e41a42",
          "dweb:/ipfs/Qmd8qkBHayruW44tHBb2TAWwZgmSVftjYftAzGSX2SyktB"
        ],
        "license": "Apache-2.0."
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/StarknetMessagingLocal.sol",
    "id": 44744,
    "exportedSymbols": {
      "IStarknetMessaging": [
        43120
      ],
      "IStarknetMessagingEvents": [
        43195
      ],
      "IStarknetMessagingLocal": [
        44690
      ],
      "NamedStorage": [
        43433
      ],
      "StarknetMessaging": [
        43914
      ],
      "StarknetMessagingLocal": [
        44743
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:1446:28",
    "nodes": [
      {
        "id": 44681,
        "nodeType": "PragmaDirective",
        "src": "40:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 44682,
        "nodeType": "ImportDirective",
        "src": "65:40:28",
        "nodes": [],
        "absolutePath": "lib/starknet/StarknetMessaging.sol",
        "file": "starknet/StarknetMessaging.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44744,
        "sourceUnit": 43915,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44690,
        "nodeType": "ContractDefinition",
        "src": "176:151:28",
        "nodes": [
          {
            "id": 44689,
            "nodeType": "FunctionDefinition",
            "src": "216:109:28",
            "nodes": [],
            "functionSelector": "db3c5270",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addMessageHashesFromL2",
            "nameLocation": "225:22:28",
            "parameters": {
              "id": 44687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44686,
                  "mutability": "mutable",
                  "name": "msgHashes",
                  "nameLocation": "276:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 44689,
                  "src": "257:28:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 44684,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "257:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44685,
                    "nodeType": "ArrayTypeName",
                    "src": "257:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "247:44:28"
            },
            "returnParameters": {
              "id": 44688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:28"
            },
            "scope": 44690,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IStarknetMessagingLocal",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 44683,
          "nodeType": "StructuredDocumentation",
          "src": "107:68:28",
          "text": "@notice Interface related to local messaging for Starknet."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44690
        ],
        "name": "IStarknetMessagingLocal",
        "nameLocation": "186:23:28",
        "scope": 44744,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44743,
        "nodeType": "ContractDefinition",
        "src": "824:661:28",
        "nodes": [
          {
            "id": 44701,
            "nodeType": "EventDefinition",
            "src": "958:63:28",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 44696,
              "nodeType": "StructuredDocumentation",
              "src": "909:44:28",
              "text": "@notice Hashes were added."
            },
            "eventSelector": "0031e49c5c8cbb8204c84525dfc1a145e06e35f873b703ce44df65b9516fb17a",
            "name": "MessageHashesAddedFromL2",
            "nameLocation": "964:24:28",
            "parameters": {
              "id": 44700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44699,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashes",
                  "nameLocation": "1008:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 44701,
                  "src": "998:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 44697,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "998:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44698,
                    "nodeType": "ArrayTypeName",
                    "src": "998:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:32:28"
            }
          },
          {
            "id": 44742,
            "nodeType": "FunctionDefinition",
            "src": "1153:329:28",
            "nodes": [],
            "body": {
              "id": 44741,
              "nodeType": "Block",
              "src": "1266:216:28",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 44735,
                    "nodeType": "Block",
                    "src": "1323:102:28",
                    "statements": [
                      {
                        "assignments": [
                          44720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44720,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "1345:4:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 44735,
                            "src": "1337:12:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 44719,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1337:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44727,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 44723,
                                "name": "msgHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44705,
                                "src": "1360:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 44725,
                              "indexExpression": {
                                "id": 44724,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44709,
                                "src": "1370:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1360:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1352:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 44721,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1352:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1352:21:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1337:36:28"
                      },
                      {
                        "expression": {
                          "id": 44733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 44728,
                                "name": "l2ToL1Messages",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43522,
                                "src": "1387:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                  "typeString": "function () pure returns (mapping(bytes32 => uint256))"
                                }
                              },
                              "id": 44729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1387:16:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 44731,
                            "indexExpression": {
                              "id": 44730,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44720,
                              "src": "1404:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1387:22:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 44732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1413:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1387:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44734,
                        "nodeType": "ExpressionStatement",
                        "src": "1387:27:28"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44712,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44709,
                      "src": "1296:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 44713,
                        "name": "msgHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44705,
                        "src": "1300:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 44714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1310:6:28",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1300:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1296:20:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44736,
                  "initializationExpression": {
                    "assignments": [
                      44709
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 44709,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1289:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 44736,
                        "src": "1281:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1281:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 44711,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 44710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1293:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1281:13:28"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 44717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1318:3:28",
                      "subExpression": {
                        "id": 44716,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44709,
                        "src": "1318:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44718,
                    "nodeType": "ExpressionStatement",
                    "src": "1318:3:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "1276:149:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44738,
                        "name": "msgHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44705,
                        "src": "1465:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 44737,
                      "name": "MessageHashesAddedFromL2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44701,
                      "src": "1440:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory)"
                      }
                    },
                    "id": 44739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:35:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44740,
                  "nodeType": "EmitStatement",
                  "src": "1435:40:28"
                }
              ]
            },
            "baseFunctions": [
              44689
            ],
            "documentation": {
              "id": 44702,
              "nodeType": "StructuredDocumentation",
              "src": "1027:121:28",
              "text": "@notice Adds the hashes of messages from L2.\n@param msgHashes Hashes to register as consumable."
            },
            "functionSelector": "db3c5270",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMessageHashesFromL2",
            "nameLocation": "1162:22:28",
            "parameters": {
              "id": 44706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44705,
                  "mutability": "mutable",
                  "name": "msgHashes",
                  "nameLocation": "1213:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 44742,
                  "src": "1194:28:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 44703,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1194:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44704,
                    "nodeType": "ArrayTypeName",
                    "src": "1194:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:44:28"
            },
            "returnParameters": {
              "id": 44707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:0:28"
            },
            "scope": 44743,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44692,
              "name": "StarknetMessaging",
              "nameLocations": [
                "859:17:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43914,
              "src": "859:17:28"
            },
            "id": 44693,
            "nodeType": "InheritanceSpecifier",
            "src": "859:17:28"
          },
          {
            "baseName": {
              "id": 44694,
              "name": "IStarknetMessagingLocal",
              "nameLocations": [
                "878:23:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44690,
              "src": "878:23:28"
            },
            "id": 44695,
            "nodeType": "InheritanceSpecifier",
            "src": "878:23:28"
          }
        ],
        "canonicalName": "StarknetMessagingLocal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44691,
          "nodeType": "StructuredDocumentation",
          "src": "329:494:28",
          "text": "@title A superset of StarknetMessaging to support\nlocal development by adding a way to directly register\na message hash ready to be consumed, without waiting the block\nto be verified.\n@dev The idea is that, to not wait on the block to be proven,\nthis messaging contract can receive directly a hash of a message\nto be considered as `received`. This message can then be consumed normally.\nDISCLAIMER:\nThe purpose of this contract is for local development only."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44743,
          44690,
          43914,
          43120,
          43195
        ],
        "name": "StarknetMessagingLocal",
        "nameLocation": "833:22:28",
        "scope": 44744,
        "usedErrors": [],
        "usedEvents": [
          43131,
          43146,
          43155,
          43168,
          43181,
          43194,
          44701
        ]
      }
    ],
    "license": "Apache-2.0."
  },
  "id": 28
}